trigger:
- master
- dev

stages:
- stage: Build
  jobs:
  - job: build
    strategy:
      matrix:
        linux: { imageName: "ubuntu-18.04" }
        mac: { imageName: "macos-10.14" }
        windows: { imageName: "windows-2019" }
      maxParallel: 3
    pool:
      vmImage: $(imageName)

    workspace:
      clean: all

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        useGlobalJson: true
        workingDirectory: "$(Pipeline.Workspace)/s/kmd-momentum-mea-client/"

    - task: DotNetCoreCLI@2
      displayName: "Build Solution"
      condition: succeeded()
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      inputs:
        command: build
        projects: './kmd-momentum-mea-client/Kmd-Momentum-Mea-Client.sln'

    - task: CopyFiles@2
      inputs:
        contents: '**bin\Debug\*.nupkg'
        targetFolder: '$(Build.ArtifactStagingDirectory)\build'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)\build'
        artifactName: build

- stage: deploy_phoenix
  condition: succeeded()
  dependsOn: Build
  jobs:
  - template: azure-pipelines-release-template.yml
    parameters:
      environment: phoenix
      isDynamicVersion: true
      feedType: internal # value should be "internal" or 'external' only

- stage: deploy_internal
  condition: succeeded()
  dependsOn: Build
  jobs:
  - template: azure-pipelines-release-template.yml
    parameters:
      environment: internal
      isDynamicVersion: true
      feedType: external # value should be "internal" or 'external' only

- stage: deploy_external
  condition: succeeded()
  dependsOn: Build
  jobs:
  - template: azure-pipelines-release-template.yml
    parameters:
      environment: external1
      isDynamicVersion: false
      feedType: external # value should be "internal" or 'external' only